// ---------------------------------------------------------------------------
// Imports

@import "compass/reset";
@import "base";

// ---------------------------------------------------------------------------
// Widgets to return real dimensions 

#sfun-yardstick-x {
  width: 100%;
  height: 0;
}
#sfun-yardstick-y {
  width: 0;
  height: 100%;
  position: absolute;
  left: -1;
}

// ---------------------------------------------------------------------------
// Core: js and no-js

.sfun {
  // setup container to allow for preseq cell size tweaking
  position: relative;
  top: 0;
  left: 0;
  // IE needs height 100%-chain set
  // http://stackoverflow.com/questions/16811716/height100-not-working-in-internet-explorer
  height: 100%;

  &.flow-em > .cell {
    width: 20em;
    height: 20em;
  }

  &.flow-pc {
    // all orientation-agnostic now

    // 1x1
    &.flow-1 {
      // turn off all margins for fullscreen, horizontal flow
      &.flow-x > .cell {
        width: 100%;
        height: 100%;
        margin-top: 0;
        margin-bottom: 0;
      }

      // turn off all margins for fullscreen, vertical flow
      &.flow-y > .cell {
        width: 100%;
        height: 100%;
        margin-left: 0;
        margin-right: 0;
      }
    }

    // 2x2, default
    &.flow-2 > .cell {
      width: (100% / 2);
      height: (100% / 2);
      @include calc(width, (100% / 2)+" - "+($alley));
      @include calc(height, (100% / 2)+" - "+($alley));
    }
    // 4x4
    &.flow-4 > .cell {
      width: (100% / 4);
      height: (100% / 4);
      @include calc(width, (100% / 4)+" - "+($alley));
      @include calc(height, (100% / 4)+" - "+($alley));
    }
    // 8x8
    &.flow-8 > .cell {
      width: (100% / 8);
      height: (100% / 8);
      @include calc(width, (100% / 8)+" - "+($alley));
      @include calc(height, (100% / 8)+" - "+($alley));
    }

    /**
     * This section is not used, but kept for reference only
     *
    @media screen and (orientation:landscape) and (max-width: $wide1) {
      // 4x2
      &.flow-2 > .cell {
        width: (100% / 4);
        height: (100% / 2);
        @include calc(width, (100% / 4)+" - "+($alley));
        @include calc(height, (100% / 2)+" - "+($alley));
      }
      // 8x4
      &.flow-4 > .cell {
        width: (100% / 8);
        height: (100% / 4);
        @include calc(width, (100% / 8)+" - "+($alley));
        @include calc(height, (100% / 4)+" - "+($alley));
      }
      // 16x8
      &.flow-8 > .cell {
        width: (100% / 16);
        height: (100% / 8);
        @include calc(width, (100% / 16)+" - "+($alley));
        @include calc(height, (100% / 8)+" - "+($alley));
      }
    }
     * 
     */

    // empty placeholder for js-inserted (dynamic) major axis cell widths
    &.flow-x.flow-dynamic-major > .cell.resizeablecell {
      // .cell.resizeablecell required to raise selector up stack over default
    }

    > .cell {
      // centre
      text-align: center;
      // don't allow anything to bleed over the edge (to avoid superfluous scrollbars)
      overflow: hidden;
      // add margin here but subtract twice (left+right or top+bottom) from cell dimensions
      // put margin left and right, top but not bottom, so that we can ensure a consistent
      // outer gutter and inner alley
      @include calc4(margin, ($alley), ($alley/2), 0px, ($alley/2));

      // tint all cells lighter
      background-color: ($background_html_light + $tint_cell_distance);

      // currently these classes are only used by js
      &.selectablecell {}
      &.resizeablecell {}

      // SELECT REFLECTOR

      // cells can be selected, but the selection is shown (reflected) by an element within
      .selectreflector {
        // make borders appear inside to avoid pushing outside cell
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        border: 1px solid;
      }

      // default colour under media-container to avoid wiping out .directory border
      > .container > .selectreflector {
        border-color: $background_html_light;
      }

      &.selected .selectreflector {
        border-color: $highlight;
      }

      > .video-container > .selectreflector {
        border: none;
      }

      // CONTAINER

      > .container {
        // relative parent required for alignment of x-bound images and meta
        position: relative;
        // display block, height 100% required for aligning image metadata to base
        display: block;
        height: 100%;
        width: 100%;
        text-decoration: none;
        // can't put margin here without cropping images, but we use that as a fallback for non-calc browsers
        margin: ($alley/2);
        @include calc(margin, "0px");

        &.directory-container.directory-outer {
          width: 100%;
          height: 100%;
          margin: 0;
          @include calc(margin, "10px");
          @include calc(width, "100% - 20px");
          @include calc(height, "100% - 20px");

          > .meta {
            // always show metadata for folders (not just on hover)
            opacity: 1;

            .base {
              // move base over so it doesn't overlap border
              margin-left: 1px;
              .iptcHeadline {
                font-weight: normal;
                font-size: 2.0em;
              }
            }
          }
        }

        // landscape images
        > img.x-bound {
          position: relative;
          width: 100%;
          top: 50%;
          transform: translate(0, -50%);
          -ms-transform: translate(0, -50%);
          -webkit-transform: translate(0, -50%);
        }
      
        // portrait images
        > img.y-bound {
          height: 100%;
        }

        // metadata over bottom of image/cell
        > .meta {
          // position absolute to stick to bottom
          display: block;
          position: absolute;
          // lift metadata above video
          z-index: 1;
          // show metadata middle left
          left: 0;
          bottom: 50%;
          margin-bottom: -4em;
          // left: 50%;
          // margin-left: -50%;
          color: #000000;
          min-height: 50%;
          text-align: left;
          width: 100%;
          font-size: 0.8em;
          // don't allow div to steal clicks
          pointer-events: none;

          // don't show initially
          opacity: 0;
          // animation for disappearance
          transition: opacity 0.3s ease-out 0s;

          .base {
            position: absolute;
            background-image: linear-gradient(rgba($background_html_light, 0.4), rgba($background_html_light, 0.8));
            padding-left: 1em;
            padding-right: 1em;
            padding-bottom: 1em;
            bottom: 0;

            // all the spans (blocks) within metadata base
            .iptc {
              margin: 1.0em 1.0em 1.0em 0;
              height: 1.2em;
              display: block;

              // truncate metadata lines
              white-space: nowrap;
              overflow: hidden;
              // needs fixed width
              // text-overflow: ellipsis;


              // make headline and summary icons appear on one line
              &.iptcHeadline {
                font-weight: bold;
                display: block;
                margin-right: 0.5em;
              }

              // summary icons in off-colour
              &.iptcCaption, &.iptcKeywords, &.iptcCopyright, &.iptcSource {
                // iptc elements need pointer events for hover/click
                pointer-events: auto;
                color: $text_icon_light;
                display: inline;
                margin-left: 0;
                margin-right: 0;
              }

              // edit icon to stand out
              &.editable {
                pointer-events: auto;
                display: inline;
                margin-left: 0;
                margin-right: 0;

                &:hover {
                  color: $text_overaction;
                }
              }

              &.iptcByline {
                display: inline;
              }

              // generally if it's a default value we don't show it (except headline)
              &.iptc_default, &.iptc_undefined {
                display: none;
              }
            } // iptc

            .imgmetric {
              // can send to right edge, but gets chopped off in small grid
              // float: right;
              // use margin to offset container padding (1em at 0.6 font)
              // margin-right: -1.67em;
              float: left;
              // use margin to offset container padding (1em at 0.8 font)
              margin-left: -1.25em;
              line-height: 1.0em;
              font-size: 0.8em;
              padding: 0 0.2em 0 0.2em;
              white-space: nowrap;
              
              .size {
                display: none;
              }

              // show the perc all the time, for messaging
              .perc {
                // display: none;
              }

              &.super {
                background-color: #009900;        
                color: #BBFFBB;
              }
              
              &.sub {
                background-color: #990000;        
                color: #FFBBBB;
              }
            } // imgmetric
          } // base
        } // meta

        // when a user hovers over a cell
        &:hover {
          .meta {
            // show on hover or editing
            opacity: 1;
            // animation for appearance
            transition: opacity 0.3s ease-in 0s;
          }

          .imgmetric {
            // show on hover
            opacity: 1;
            // animation for appearance
            transition: opacity 0.3s ease-in 0s;
          }
        }

        // video (as play button)
        .button {
          position: absolute;
          top: 15%;
          left: 45%;
          color: #fff;
          font-size: 2.0em;
          border: 4px solid #fff;
          border-radius: 0.8em;
          box-shadow: 0 0 .2em #fff;
          padding: 2.5% 5% 2.5% 5%;
          opacity: 0.5;
        }

        // video (as video.js)
        .video-js {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          background: none;
        }

      } // a.container

      &.video-playing {
        .meta {
          display: none;
        }
      }

      &.editing {
        .meta {
          // show on hover or editing
          opacity: 1;
          // animation for appearance
          transition: opacity 0.3s ease-in 0s;
        }
      }

      &.video-ready {
        .pre-vjs-button {
          display: none;
        }
      }

      // metadata editing
      .metaform-holder {
        // show over the top of the image
        position: relative;
        top: -100%;

        // container fills the cell
        width: 100%;
        height: 100%;

        // inner has flexible height but aligns to bottom
        > div {
          position: absolute;
          bottom: 0;
          width: 100%;
        }

        input[type=text], textarea {
          // take out defaults
          background: none;
          border: none;
          color: $text_light;
          width: 100%;
          max-width: 50em;

          // show form field boxes only on focus
          &:focus {
            border: 1px solid $text_icon_light;
          }
          // headline should keep its bold during editing
          &.iptcHeadline {
            font-weight: bold;
          }
        }

        // hide labels
        label {
          display: none;
        }
      } // .metadata-holder

      // title over directories
      .title {
        opacity:0.7;
        filter:alpha(opacity=70); /* For IE8 and earlier */
        height: 0;
        line-height: 0;
        top: -4.0em;
        position: relative;
        width: 100px;
        background-color: $background_html_light;
        color: #000000;
        margin: 0 2.4% 0 2.7%;
        padding: 0.5em;
      } // title

      // show metric if image is visible or part-visible
      &.visible .imgmetric, &.vispart p.imgmetric {
        display: block;
      }

      // 2s after reres completes, add this class to cell
      &.reres-plus-2s {
        .imgmetric {
          opacity: 0;
          transition: opacity 0.3s ease-out 0s;
        }
      }

    } // .cell

  }
}

// ---------------------------------------------------------------------------
// Core: js only

.js .sfun {
  .cell {
    // hide images between loading thumbnail and resizing cell
    &.resizepending {
      visibility: hidden;
    }  
  }
}
      
