// ---------------------------------------------------------------------------
// Imports

@import "compass/reset";
@import "base";

// ---------------------------------------------------------------------------
// Widgets to return real dimensions 

#sfun-yardstick-x {
  width: 100%;
  height: 0;
}
#sfun-yardstick-y {
  width: 0;
  height: 100%;
  position: absolute;
  left: -1;
}

// ---------------------------------------------------------------------------
// Core: js and no-js

.sfun {
  // setup container to allow for preseq cell size tweaking
  position: relative;
  top: 0;
  left: 0;
  // IE needs height 100%-chain set
  // http://stackoverflow.com/questions/16811716/height100-not-working-in-internet-explorer
  height: 100%;

  &.flow-em > .cell {
    width: 20em;
    height: 20em;
  }

  &.flow-pc {
    // all orientation-agnostic now

    // 1x1
    &.flow-1 > .cell {
      width: 100%;
      height: 100%;
      // use calc to subtract cell margin, if supported
      @include calc(width, (100%)+" - "+($alley));
      @include calc(height, (100%)+" - "+($alley));
    }

    // 2x2, default
    &.flow-2 > .cell {
      width: (100% / 2);
      height: (100% / 2);
      @include calc(width, (100% / 2)+" - "+($alley));
      @include calc(height, (100% / 2)+" - "+($alley));
    }
    // 4x4
    &.flow-4 > .cell {
      width: (100% / 4);
      height: (100% / 4);
      @include calc(width, (100% / 4)+" - "+($alley));
      @include calc(height, (100% / 4)+" - "+($alley));
    }
    // 8x8
    &.flow-8 > .cell {
      width: (100% / 8);
      height: (100% / 8);
      @include calc(width, (100% / 8)+" - "+($alley));
      @include calc(height, (100% / 8)+" - "+($alley));
    }

    // empty placeholder for js-inserted (dynamic) major axis cell widths
    &.flow-dynamic-major > .cell {
    }

    /**
     * This section is not used, but kept for reference only
     *
    @media screen and (orientation:landscape) and (max-width: $wide1) {
      // 4x2
      &.flow-2 > .cell {
        width: (100% / 4);
        height: (100% / 2);
        @include calc(width, (100% / 4)+" - "+($alley));
        @include calc(height, (100% / 2)+" - "+($alley));
      }
      // 8x4
      &.flow-4 > .cell {
        width: (100% / 8);
        height: (100% / 4);
        @include calc(width, (100% / 8)+" - "+($alley));
        @include calc(height, (100% / 4)+" - "+($alley));
      }
      // 16x8
      &.flow-8 > .cell {
        width: (100% / 16);
        height: (100% / 8);
        @include calc(width, (100% / 16)+" - "+($alley));
        @include calc(height, (100% / 8)+" - "+($alley));
      }
    }
     * 
     */

    > .cell {
      // centre
      text-align: center;
      // don't allow anything to bleed over the edge (to avoid superfluous scrollbars)
      overflow: hidden;
      // add margin here but subtract twice (left+right or top+bottom) from cell dimensions
      @include calc(margin, ($alley/2));

      // currently these classes are only used by js
      &.selectablecell {}
      &.resizeablecell {}

      // cells can be selected, but the selection is shown (reflected) by an element within
      .selectreflector {
        // make borders appear inside to avoid pushing outside cell
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        -webkit-box-sizing: border-box;
        border: 1px solid;
      }

      // default colour under media-container to avoid wiping out .directory border
      .media-container .selectreflector {
        border-color: $background_html_light;
      }

      &.selected .selectreflector {
        border-color: $highlight;
      }

      .container {
        // relative parent required for alignment of x-bound images and meta
        position: relative;
        // display block, height 100% required for aligning image metadata to base
        display: block;
        height: 100%;
        width: 100%;
        text-decoration: none;
        // can't put margin here without cropping images, but we use that as a fallback for non-calc browsers
        margin: ($alley/2);
        @include calc(margin, "0px");

        // landscape images
        img.x-bound {
          position: relative;
          width: 100%;
          top: 50%;
          transform: translate(0, -50%);
          -ms-transform: translate(0, -50%);
          -webkit-transform: translate(0, -50%);
        }
      
        // portrait images
        img.y-bound {
          height: 100%;
        }

        .imgmetric {
          line-height: 1.0em;
          position: absolute;
          z-index: 1;
          font-size: 0.6em;
          white-space: nowrap;
          display: none;
          
          .size, .perc {
            display: none;
          }

          &.super {
            background-color: #009900;        
            color: #BBFFBB;
          }
          
          &.sub {
            background-color: #990000;        
            color: #FFBBBB;
          }

        } // imgmetric

        // metadata over bottom of image/cell
        .meta {
          // position absolute to stick to bottom
          display: block;
          position: absolute;
          bottom: 0;
          background-image: linear-gradient(rgba($background_html_light, 0), rgba($background_html_light, 0.8));
          color: #000000;
          height: 8em;
          text-align: left;
          left: 50%;
          margin-left: -50%;
          width: 100%;
          font-size: 0.8em;

          // don't show initially
          opacity: 0;
          // animation for disappearance
          transition: opacity 0.3s ease-out 0s;

          .base {
            position: absolute;
            bottom: 0;

            // all the spans (blocks) within metadata base
            span {
              margin: 1.0em;
              display: block;

              &.icons {
                height: 2.0em;
              }

              &.caption {
                font-weight: bold;
              }

              &.byline {
                margin-top: .5em;
              }
            }
          }
        } // meta

        // when a user hovers over a cell
        &:hover {
          .meta {
            // show on hover
            opacity: 1;
            // animation for appearance
            transition: opacity 0.3s ease-in 0s;
          }

          .imgmetric {
            // show on hover
            opacity: 1;
            // animation for appearance
            transition: opacity 0.3s ease-in 0s;
          }
        }

      } // a

      // directories with preview images
      .directory {
        border: 1px solid $directory_light;
        border-radius: ($alley * 2);
        box-sizing: border-box;
        width: 100%;
        height: 100%;
        position: relative;

        .overlay {
          width: 100%;
          height: 100%;
          display: inline-block;
          // absolute position within relative container to do overlay with no effective height
          position: absolute;
          top: 0;
          z-index: 1;
        }

      } // directory

      // title over directories
      .title {
        opacity:0.7;
        filter:alpha(opacity=70); /* For IE8 and earlier */
        height: 0;
        line-height: 0;
        top: -4.0em;
        position: relative;
        width: 100px;
        background-color: $background_html_light;
        color: #000000;
        margin: 0 2.4% 0 2.7%;
        padding: 0.5em;
      } // title

      // sub-cells are always 2x2
      .subcell {
        width: (100% / 2);
        height: (100% / 2);
        // add margin here but subtract twice (left+right or top+bottom) from cell dimensions
        @include calc(margin, ($alley / 2));
        // use calc to subtract cell margin, if supported
        @include calc(width, (100% / 2)+" - "+($alley));
        @include calc(height, (100% / 2)+" - "+($alley));
      }

      // show metric if image is visible or part-visible
      &.visible .imgmetric, &.vispart p.imgmetric {
        display: block;
      }
      // but not if it's in the process of reresing
      &.reresing .imgmetric {
        display: none;
      }

      // 2s after reres completes, add this class to cell
      &.reres-plus-2s {
        .imgmetric {
          opacity: 0;
          transition: opacity 0.3s ease-out 0s;
        }
      }

    } // .cell
  }
}

// ---------------------------------------------------------------------------
// Core: js only

.js .sfun {
  .cell {
    // hide images between loading thumbnail and resizing cell
    &.resizepending {
      visibility: hidden;
    }  
  }
}
      
